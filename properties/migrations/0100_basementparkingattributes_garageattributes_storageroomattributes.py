# Generated by Django 3.1 on 2022-01-11 17:25

import audit.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0099_auto_20220111_1259'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasementParkingAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description public')),
                ('description_private', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description private')),
                ('description_sentimental', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description sentimental')),
                ('surface_total', models.FloatField(blank=True, null=True, verbose_name='Surface total m2')),
                ('surface_util', models.FloatField(blank=True, null=True, verbose_name='Surface util m2')),
                ('surface_built', models.FloatField(blank=True, null=True, verbose_name='Surface built m2')),
                ('surface_field', models.FloatField(blank=True, null=True, verbose_name='Surface field m2')),
                ('surface_garden', models.FloatField(blank=True, null=True, verbose_name='Surface garden m2')),
                ('front_line', models.FloatField(blank=True, null=True, verbose_name='Front line m')),
                ('top_floor', models.BooleanField(default=False, verbose_name='Is top floor')),
                ('ground_floor', models.BooleanField(default=False, verbose_name='Is ground floor')),
                ('mansard', models.BooleanField(default=False, verbose_name='Is mansard')),
                ('new_building', models.BooleanField(default=False, verbose_name='New building')),
                ('in_development', models.BooleanField(default=False, verbose_name='In development')),
                ('key_holding', models.BooleanField(default=False, verbose_name='Key holding')),
                ('partitioning', models.CharField(blank=True, choices=[('open-space', 'Open-space'), ('circuit', 'Circuit'), ('semidetached', 'Semi-detached'), ('detached', 'Detached'), ('wagon', 'Wagon')], max_length=50, null=True, verbose_name='Partitioning')),
                ('comfort', models.CharField(blank=True, choices=[('increased', 'Increased'), ('one', 'One'), ('unique', 'Unique'), ('two', 'Two'), ('three', 'Three')], max_length=50, null=True, verbose_name='Comfort')),
                ('orientation', models.CharField(blank=True, choices=[('north', 'North'), ('northeast', 'Northeast'), ('east', 'East'), ('southeast', 'Southeast'), ('south', 'South'), ('southwest', 'Southwest'), ('west', 'West'), ('northwest', 'Northwest'), ('northsouth', 'Northsouth'), ('eastwest', 'Eastwest')], max_length=50, null=True, verbose_name='Orientation')),
                ('energy_class', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('e', 'E'), ('f', 'F'), ('g', 'G')], max_length=20, null=True, verbose_name='Energy class')),
                ('construction_year', models.IntegerField(blank=True, null=True, verbose_name='Construction year')),
                ('built', models.CharField(blank=True, choices=[('before_1960', 'Before 1960'), ('between_1960_2010', 'Between 1960 - 2010'), ('after_2010', 'After 2010')], max_length=256, null=True, verbose_name='Built')),
                ('interior_state', models.CharField(blank=True, choices=[('in white', 'In white'), ('in grey', 'In grey'), ('with fixes', 'With fixes'), ('unfinished', 'Unfinished'), ('lux', 'Luxurious')], max_length=50, null=True, verbose_name='Interior state')),
                ('construction_material', models.CharField(blank=True, choices=[('brick', 'Brick'), ('concrete', 'Concrete'), ('bca', 'BCA'), ('wood', 'Wood'), ('limestone', 'Limestone')], max_length=50, null=True, verbose_name='Construction material')),
                ('floors', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], null=True, verbose_name='Total Floors')),
                ('rooms_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], null=True, verbose_name='Rooms number')),
                ('bathrooms_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Bathrooms number')),
                ('kitchens_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Kitchens number')),
                ('balconies_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Balconies number')),
                ('internet_connection', models.CharField(blank=True, choices=[('fiber_optics', 'Fiber optics'), ('cable', 'Cable')], max_length=256, null=True, verbose_name='Internet connection')),
                ('garage', models.CharField(blank=True, choices=[('garage', 'Garage'), ('underground_garage', 'Underground parking'), ('exterior_parking', 'Exterior parking'), ('subscription_parking', 'Subscription parking')], max_length=256, null=True, verbose_name='Parking')),
                ('furnished', models.CharField(blank=True, choices=[('semi_furnished', 'Semi-furnished'), ('furnished_kitchen', 'Furnished kitchen'), ('furnished_modern', 'Furnished with modern utilities'), ('furnished_classic', 'Furnished with classic utilities'), ('lux', 'Luxurious')], max_length=256, null=True, verbose_name='Furnished')),
                ('windows', models.CharField(blank=True, choices=[('double_glazing', 'Double glazing glass'), ('wood_glass', 'Wood and glass')], max_length=256, null=True, verbose_name='Windows')),
                ('heating_source', models.CharField(blank=True, choices=[('central_heating', 'Central heating in building'), ('individual_central_heating', 'Individual central heating'), ('underfloor_heating', 'Underfloor heating'), ('district_heating', 'District heating'), ('wood_central_heating', 'Wood central heating'), ('fireplace', 'Fireplace'), ('convectors', 'Convectors')], max_length=256, null=True, verbose_name='Heating source')),
                ('cadastral_number', models.CharField(blank=True, default='', max_length=50, verbose_name='Cadastral number')),
                ('topographic_number', models.CharField(blank=True, default='', max_length=50, verbose_name='Topographic number')),
                ('land_registry', models.CharField(blank=True, default='', max_length=50, verbose_name='Land registry')),
                ('subtype', models.CharField(blank=True, choices=[('basement_parking', 'Basement Parking')], default='basement_parking', max_length=50, null=True, verbose_name='Basement Parking subtype')),
            ],
            options={
                'abstract': False,
            },
            bases=(audit.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GarageAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description public')),
                ('description_private', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description private')),
                ('description_sentimental', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description sentimental')),
                ('surface_total', models.FloatField(blank=True, null=True, verbose_name='Surface total m2')),
                ('surface_util', models.FloatField(blank=True, null=True, verbose_name='Surface util m2')),
                ('surface_built', models.FloatField(blank=True, null=True, verbose_name='Surface built m2')),
                ('surface_field', models.FloatField(blank=True, null=True, verbose_name='Surface field m2')),
                ('surface_garden', models.FloatField(blank=True, null=True, verbose_name='Surface garden m2')),
                ('front_line', models.FloatField(blank=True, null=True, verbose_name='Front line m')),
                ('top_floor', models.BooleanField(default=False, verbose_name='Is top floor')),
                ('ground_floor', models.BooleanField(default=False, verbose_name='Is ground floor')),
                ('mansard', models.BooleanField(default=False, verbose_name='Is mansard')),
                ('new_building', models.BooleanField(default=False, verbose_name='New building')),
                ('in_development', models.BooleanField(default=False, verbose_name='In development')),
                ('key_holding', models.BooleanField(default=False, verbose_name='Key holding')),
                ('partitioning', models.CharField(blank=True, choices=[('open-space', 'Open-space'), ('circuit', 'Circuit'), ('semidetached', 'Semi-detached'), ('detached', 'Detached'), ('wagon', 'Wagon')], max_length=50, null=True, verbose_name='Partitioning')),
                ('comfort', models.CharField(blank=True, choices=[('increased', 'Increased'), ('one', 'One'), ('unique', 'Unique'), ('two', 'Two'), ('three', 'Three')], max_length=50, null=True, verbose_name='Comfort')),
                ('orientation', models.CharField(blank=True, choices=[('north', 'North'), ('northeast', 'Northeast'), ('east', 'East'), ('southeast', 'Southeast'), ('south', 'South'), ('southwest', 'Southwest'), ('west', 'West'), ('northwest', 'Northwest'), ('northsouth', 'Northsouth'), ('eastwest', 'Eastwest')], max_length=50, null=True, verbose_name='Orientation')),
                ('energy_class', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('e', 'E'), ('f', 'F'), ('g', 'G')], max_length=20, null=True, verbose_name='Energy class')),
                ('construction_year', models.IntegerField(blank=True, null=True, verbose_name='Construction year')),
                ('built', models.CharField(blank=True, choices=[('before_1960', 'Before 1960'), ('between_1960_2010', 'Between 1960 - 2010'), ('after_2010', 'After 2010')], max_length=256, null=True, verbose_name='Built')),
                ('interior_state', models.CharField(blank=True, choices=[('in white', 'In white'), ('in grey', 'In grey'), ('with fixes', 'With fixes'), ('unfinished', 'Unfinished'), ('lux', 'Luxurious')], max_length=50, null=True, verbose_name='Interior state')),
                ('construction_material', models.CharField(blank=True, choices=[('brick', 'Brick'), ('concrete', 'Concrete'), ('bca', 'BCA'), ('wood', 'Wood'), ('limestone', 'Limestone')], max_length=50, null=True, verbose_name='Construction material')),
                ('floors', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], null=True, verbose_name='Total Floors')),
                ('rooms_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], null=True, verbose_name='Rooms number')),
                ('bathrooms_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Bathrooms number')),
                ('kitchens_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Kitchens number')),
                ('balconies_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Balconies number')),
                ('internet_connection', models.CharField(blank=True, choices=[('fiber_optics', 'Fiber optics'), ('cable', 'Cable')], max_length=256, null=True, verbose_name='Internet connection')),
                ('garage', models.CharField(blank=True, choices=[('garage', 'Garage'), ('underground_garage', 'Underground parking'), ('exterior_parking', 'Exterior parking'), ('subscription_parking', 'Subscription parking')], max_length=256, null=True, verbose_name='Parking')),
                ('furnished', models.CharField(blank=True, choices=[('semi_furnished', 'Semi-furnished'), ('furnished_kitchen', 'Furnished kitchen'), ('furnished_modern', 'Furnished with modern utilities'), ('furnished_classic', 'Furnished with classic utilities'), ('lux', 'Luxurious')], max_length=256, null=True, verbose_name='Furnished')),
                ('windows', models.CharField(blank=True, choices=[('double_glazing', 'Double glazing glass'), ('wood_glass', 'Wood and glass')], max_length=256, null=True, verbose_name='Windows')),
                ('heating_source', models.CharField(blank=True, choices=[('central_heating', 'Central heating in building'), ('individual_central_heating', 'Individual central heating'), ('underfloor_heating', 'Underfloor heating'), ('district_heating', 'District heating'), ('wood_central_heating', 'Wood central heating'), ('fireplace', 'Fireplace'), ('convectors', 'Convectors')], max_length=256, null=True, verbose_name='Heating source')),
                ('cadastral_number', models.CharField(blank=True, default='', max_length=50, verbose_name='Cadastral number')),
                ('topographic_number', models.CharField(blank=True, default='', max_length=50, verbose_name='Topographic number')),
                ('land_registry', models.CharField(blank=True, default='', max_length=50, verbose_name='Land registry')),
                ('subtype', models.CharField(blank=True, choices=[('garage', 'Garage')], default='garage', max_length=50, null=True, verbose_name='Garage subtype')),
            ],
            options={
                'abstract': False,
            },
            bases=(audit.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StorageRoomAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description public')),
                ('description_private', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description private')),
                ('description_sentimental', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description sentimental')),
                ('surface_total', models.FloatField(blank=True, null=True, verbose_name='Surface total m2')),
                ('surface_util', models.FloatField(blank=True, null=True, verbose_name='Surface util m2')),
                ('surface_built', models.FloatField(blank=True, null=True, verbose_name='Surface built m2')),
                ('surface_field', models.FloatField(blank=True, null=True, verbose_name='Surface field m2')),
                ('surface_garden', models.FloatField(blank=True, null=True, verbose_name='Surface garden m2')),
                ('front_line', models.FloatField(blank=True, null=True, verbose_name='Front line m')),
                ('top_floor', models.BooleanField(default=False, verbose_name='Is top floor')),
                ('ground_floor', models.BooleanField(default=False, verbose_name='Is ground floor')),
                ('mansard', models.BooleanField(default=False, verbose_name='Is mansard')),
                ('new_building', models.BooleanField(default=False, verbose_name='New building')),
                ('in_development', models.BooleanField(default=False, verbose_name='In development')),
                ('key_holding', models.BooleanField(default=False, verbose_name='Key holding')),
                ('partitioning', models.CharField(blank=True, choices=[('open-space', 'Open-space'), ('circuit', 'Circuit'), ('semidetached', 'Semi-detached'), ('detached', 'Detached'), ('wagon', 'Wagon')], max_length=50, null=True, verbose_name='Partitioning')),
                ('comfort', models.CharField(blank=True, choices=[('increased', 'Increased'), ('one', 'One'), ('unique', 'Unique'), ('two', 'Two'), ('three', 'Three')], max_length=50, null=True, verbose_name='Comfort')),
                ('orientation', models.CharField(blank=True, choices=[('north', 'North'), ('northeast', 'Northeast'), ('east', 'East'), ('southeast', 'Southeast'), ('south', 'South'), ('southwest', 'Southwest'), ('west', 'West'), ('northwest', 'Northwest'), ('northsouth', 'Northsouth'), ('eastwest', 'Eastwest')], max_length=50, null=True, verbose_name='Orientation')),
                ('energy_class', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('e', 'E'), ('f', 'F'), ('g', 'G')], max_length=20, null=True, verbose_name='Energy class')),
                ('construction_year', models.IntegerField(blank=True, null=True, verbose_name='Construction year')),
                ('built', models.CharField(blank=True, choices=[('before_1960', 'Before 1960'), ('between_1960_2010', 'Between 1960 - 2010'), ('after_2010', 'After 2010')], max_length=256, null=True, verbose_name='Built')),
                ('interior_state', models.CharField(blank=True, choices=[('in white', 'In white'), ('in grey', 'In grey'), ('with fixes', 'With fixes'), ('unfinished', 'Unfinished'), ('lux', 'Luxurious')], max_length=50, null=True, verbose_name='Interior state')),
                ('construction_material', models.CharField(blank=True, choices=[('brick', 'Brick'), ('concrete', 'Concrete'), ('bca', 'BCA'), ('wood', 'Wood'), ('limestone', 'Limestone')], max_length=50, null=True, verbose_name='Construction material')),
                ('floors', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], null=True, verbose_name='Total Floors')),
                ('rooms_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], null=True, verbose_name='Rooms number')),
                ('bathrooms_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Bathrooms number')),
                ('kitchens_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Kitchens number')),
                ('balconies_number', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True, verbose_name='Balconies number')),
                ('internet_connection', models.CharField(blank=True, choices=[('fiber_optics', 'Fiber optics'), ('cable', 'Cable')], max_length=256, null=True, verbose_name='Internet connection')),
                ('garage', models.CharField(blank=True, choices=[('garage', 'Garage'), ('underground_garage', 'Underground parking'), ('exterior_parking', 'Exterior parking'), ('subscription_parking', 'Subscription parking')], max_length=256, null=True, verbose_name='Parking')),
                ('furnished', models.CharField(blank=True, choices=[('semi_furnished', 'Semi-furnished'), ('furnished_kitchen', 'Furnished kitchen'), ('furnished_modern', 'Furnished with modern utilities'), ('furnished_classic', 'Furnished with classic utilities'), ('lux', 'Luxurious')], max_length=256, null=True, verbose_name='Furnished')),
                ('windows', models.CharField(blank=True, choices=[('double_glazing', 'Double glazing glass'), ('wood_glass', 'Wood and glass')], max_length=256, null=True, verbose_name='Windows')),
                ('heating_source', models.CharField(blank=True, choices=[('central_heating', 'Central heating in building'), ('individual_central_heating', 'Individual central heating'), ('underfloor_heating', 'Underfloor heating'), ('district_heating', 'District heating'), ('wood_central_heating', 'Wood central heating'), ('fireplace', 'Fireplace'), ('convectors', 'Convectors')], max_length=256, null=True, verbose_name='Heating source')),
                ('cadastral_number', models.CharField(blank=True, default='', max_length=50, verbose_name='Cadastral number')),
                ('topographic_number', models.CharField(blank=True, default='', max_length=50, verbose_name='Topographic number')),
                ('land_registry', models.CharField(blank=True, default='', max_length=50, verbose_name='Land registry')),
                ('subtype', models.CharField(blank=True, choices=[('storage_room', 'Storage Room')], default='storage_room', max_length=50, null=True, verbose_name='Storage Room subtype')),
            ],
            options={
                'abstract': False,
            },
            bases=(audit.models.ModelDiffMixin, models.Model),
        ),
    ]
